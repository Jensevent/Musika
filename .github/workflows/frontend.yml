# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ walking-skeleton ]


env:
  PATH_TO_PACK: './front-end/my-app'
  PATH_TO_DOCKERFILE: './front-end/my-app/Dockerfile'
  DOCKER_IMAGE_NAME: musika_frontend:latest
  DOCKER_REPO_NAME: jensevent/musika_frontend

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: '**/package-lock.json'
    - run: npm --prefix $PATH_TO_PACK ci 
    - run: npm --prefix $PATH_TO_PACK run build --if-present
    - run: npm --prefix $PATH_TO_PACK test

  docker:
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Clone repo to runner
        uses: actions/checkout@v3

      - name: Build docker image
        run:  docker build . --file $PATH_TO_DOCKERFILE --tag $DOCKER_IMAGE_NAME

      - name: Login into docker hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCTOKEN }} 

      - name: Tag image to repo
        run:  docker tag $DOCKER_IMAGE_NAME $DOCKER_REPO_NAME

      - name: Push image to docker hub
        run:  docker push $DOCKER_REPO_NAME

      - name: Docker logout
        run:  docker logout